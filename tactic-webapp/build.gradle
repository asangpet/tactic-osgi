apply plugin: 'war'

version = '0.0.1'

description = 'TACTIC Web application'

configurations {
	bundleLibs
	bundleLibs.exclude group:'com.fasterxml.jackson.core'
	bundleLibs.exclude group:'org.slf4j'
}

repositories {
	flatDir name: 'localRepository', dirs: file('../lib')
}

dependencies {
	compile "org.thymeleaf:thymeleaf-spring3:$thymeleafVersion"
	bundleLibs "org.thymeleaf:thymeleaf-spring3:$thymeleafVersion"
	
	providedCompile project(':mongodb-service')
	providedCompile project(':model-service')
	
	providedCompile "org.osgi:core:4.3.0"
	providedCompile "org.springframework:spring-webmvc:$springVersion"
	
	
	providedCompile "org.springframework:spring-context:$springVersion"
	providedCompile "org.springframework:spring-context-support:$springVersion"
	providedCompile "javax.inject:javax.inject:$javaxInjectVersion"
	
	providedCompile "org.slf4j:slf4j-api:$slf4jVersion"
	providedCompile "org.apache.servicemix.bundles:org.apache.servicemix.bundles.cglib:$cglibVersion"
	providedCompile "org.springframework:spring-aop:$springVersion"
	providedCompile "org.springframework:spring-asm:$springVersion"
	providedCompile "org.springframework:spring-beans:$springVersion"
	providedCompile "org.springframework:spring-core:$springVersion"
	providedCompile "org.springframework:spring-expression:$springVersion"
	providedCompile "commons-logging:commons-logging:1.1.1"
	providedCompile "javax:javaee-web-api:6.0"
	providedCompile "javax.servlet.jsp:jsp-api:$jspVersion"
}

bundlor {
	bundleSymbolicName = project.name
	bundleName = project.name
	bundleVersion = project.version
	failOnWarnings = true
	manifestTemplate = new File("${project.projectDir}/src/main/resources/META-INF/MANIFEST.MF").text	
}

war {
	dependsOn 'bundlor'
	manifest.from new File("${project.buildDir}/bundlor/META-INF/MANIFEST.MF")
}

task assembleBundle(type: Copy, dependsOn: war) {
	from "$buildDir/libs"
	into "$buildDir/libs"
	rename { filename -> filename.replace 'war', 'jar' }
}

task uploadJar(dependsOn:'assembleBundle', overwrite:true) {
	copy {
		from jar.archivePath
		into "${pickupLocation}"
	}
}	
